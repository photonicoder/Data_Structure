Construct Tree from Postorder and Inorder

Given Postorder and Inorder traversal of a binary tree, create the binary tree associated with the traversals.You just need to construct the tree and return the root.
Note: Assume binary tree contains only unique elements.
Input format :

Line 1 : n (Total number of nodes in binary tree)

Line 2 : Post order traversal

Line 3 : Inorder Traversal

Output Format :

Elements are printed level wise, each level in new line (separated by space).

Sample Input :
8
8 4 5 2 6 7 3 1
4 8 2 5 1 6 3 7
Sample Output :
1 
2 3 
4 5 6 7 
8
SOLUTIONS


BinaryTreeNode<int>*helper(int *pt,int *ino,int ins,int ine,int pos,int poe)
{
    if(ins>ine)
        return NULL;
    int rootdata=pt[poe];
    int rootindex=-1;
    for (int i=ins;i<=ine;i++)
    {
        if(ino[i]==rootdata)
        {
            rootindex=i;
            break;
        }
    }
    int lins=ins;
    int line=rootindex-1;
    int lps=pos;
    int lpe=line-lins+lps;
    int rins=rootindex+1;
    int rine=ine;
    int rps=lpe+1;
    int rpe=poe-1;
    BinaryTreeNode<int>* root=new BinaryTreeNode<int>(rootdata);
    root->left=helper(pt,ino,lins,line,lps,lpe);
    root->right=helper(pt,ino,rins,rine,rps,rpe);
    return root;
    
    
}

BinaryTreeNode<int>* getTreeFromPostorderAndInorder(int *postorder, int postLength, int *inorder, int inLength) {
   return helper(postorder,inorder,0,postLength-1,0,postLength-1);

}
