Level order traversal
Given a binary tree, print the level order traversal. Make sure each level start in new line.
Input format :

Elements in level order form (separated by space). If any node does not have left or right child, take -1 in its place.

Output Format :

Elements are printed level wise, each level in new line (separated by space).

Sample Input :
5 6 10 2 3 -1 -1 -1 -1 -1 9 -1 -1
Sample Output :
5 
6 10 
2 3 
9
SOLUTIONS
// Following is the Binary Tree node structure
/**************
class BinaryTreeNode {
    public : 
    T data;
    BinaryTreeNode<T> *left;
    BinaryTreeNode<T> *right;

    BinaryTreeNode(T data) {
        this -> data = data;
        left = NULL;
        right = NULL;
    }
};

***************/

void printLevelATNewLine(BinaryTreeNode<int> *root) {
    BinaryTreeNode<int>*f=root;
    queue<BinaryTreeNode<int>*>q;
    q.push(f);
    q.push(NULL);
    while(q.size()!=0)
    {
        BinaryTreeNode<int>*fr=q.front();
        q.pop();
        if(fr!=NULL)
        {
            cout<<fr->data<<' ';
            if(fr->left!=NULL)
            {
                q.push(fr->left);
            }
             if(fr->right!=NULL)
            {
                q.push(fr->right);
            }
        }
        else
        {
            cout<<endl;
            if(q.size()==0)
                break;
            else
            q.push(NULL);
            
        }
            
    }

}
