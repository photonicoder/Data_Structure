Find a node in LL (recursive)

Given a linked list and an integer n you need to find and return index where n is present in the LL. Do this recursively.
Return -1 if n is not present in the LL.
Indexing of nodes starts from 0.
Input format :
Line 1 : Linked list elements (separated by space and terminated by -1)
Line 2 : Integer n 
Output format :
Index
Sample Input 1 :
3 4 5 2 6 1 9 -1
5
Sample Output 1 :
2
Sample Input 2 :
3 4 5 2 6 1 9 -1
6
Sample Output 2 :
4
/*solutions*/
/**********
 * Following is the Node class that is already written.
 
class Node{
public:
    int data;
    Node *next;
    Node(int data){
        this -> data = data;
        this -> next = NULL;
    }
};
 
*********/
int helper(Node *head, int i,int n)
{
    if(head==NULL)
        return -1;
    if(head->data==n)
    {
        return i;
    }
    i=i+1;
    return helper(head->next,i,n);
}
int indexOfNRecursive(Node *head, int n) {
    int i=0;
    return helper(head,i,n);
    
}


