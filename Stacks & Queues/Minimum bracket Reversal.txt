Minimum bracket Reversal

Given a string expression which consists only ‘}’ and ‘{‘. The expression may not be balanced. You need to find the minimum number of bracket reversals which are required to make the expression balanced.
Return -1 if the given expression can't be balanced.
Input Format :
String S
Output Format :
Required count
Sample Input 1 :
{{{
Sample Output 1 :
-1
Sample Input 2 :
{{{{}}
Sample Output 2 :
1
SOLUTIONS
#include<stack>
#include<cstring>
int countBracketReversals(char input[]){
	// Write your code here
    stack<char> s;
    int len=strlen(input);
    if(len==0){
        return 0;
    }
    if(len%2!=0){
        return -1;
    }
        for(int i=0;i<len;i++){
            if(input[i]=='{'){
                s.push(input[i]);
            }
            else{
            if(!s.empty() && s.top()=='{')
                s.pop();
                else
                    s.push(input[i]);
            }
        }
            
        int count=0;
        while(!s.empty()){
           char c1=s.top();
            s.pop();
            char c2=s.top();
            s.pop();
            if(c1==c2){
                count++;
            }
            else
                count+=2;
        }
    return count;


}